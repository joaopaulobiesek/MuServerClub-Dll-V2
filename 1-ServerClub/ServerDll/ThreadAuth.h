#pragma once

enum eAuthServerType
{
	AUTH_SERVER_TYPE_NONE = 0,
	AUTH_SERVER_TYPE_S0_SERVERDLL = 1,
	AUTH_SERVER_TYPE_S2_SERVERDLL = 2,
	AUTH_SERVER_TYPE_S4_SERVERDLL = 3,
	AUTH_SERVER_TYPE_S6_SERVERDLL = 4,
	AUTH_SERVER_TYPE_S8_SERVERDLL = 5,
	AUTH_SERVER_TYPE_S10_SERVERDLL = 6,
	AUTH_SERVER_TYPE_S12_SERVERDLL = 7,
	AUTH_SERVER_TYPE_S13_SERVERDLL = 8,
	AUTH_SERVER_TYPE_S14_SERVERDLL = 9,
	AUTH_SERVER_TYPE_S15_SERVERDLL = 10,
	AUTH_SERVER_TYPE_S16_SERVERDLL = 11,
	AUTH_SERVER_TYPE_S12_IGC_SERVERDLL = 12,
	AUTH_SERVER_TYPE_S1701_SERVERDLL = 13,
	AUTH_SERVER_TYPE_S1702_SERVERDLL = 14
};

enum eAuthServerPackage
{
	AUTH_SERVER_PACKAGE_NONE = 0,
	AUTH_SERVER_PACKAGE_S2_BASIC = 1,
	AUTH_SERVER_PACKAGE_S2_FULL = 2,
	AUTH_SERVER_PACKAGE_S4_BASIC = 3,
	AUTH_SERVER_PACKAGE_S4_FULL = 4,
	AUTH_SERVER_PACKAGE_S6_BASIC = 5,
	AUTH_SERVER_PACKAGE_S6_FULL = 6,
	AUTH_SERVER_PACKAGE_S8_BASIC = 7,
	AUTH_SERVER_PACKAGE_S8_FULL = 8,
	AUTH_SERVER_PACKAGE_S10_BASIC = 9,
	AUTH_SERVER_PACKAGE_S10_FULL = 10,
	AUTH_SERVER_PACKAGE_S12_BASIC = 11,
	AUTH_SERVER_PACKAGE_S12_FULL = 12,
	AUTH_SERVER_PACKAGE_S13_BASIC = 13,
	AUTH_SERVER_PACKAGE_S13_FULL = 14,
	AUTH_SERVER_PACKAGE_S14_BASIC = 15,
	AUTH_SERVER_PACKAGE_S14_FULL = 16,
	AUTH_SERVER_PACKAGE_S15_BASIC = 17,
	AUTH_SERVER_PACKAGE_S15_FULL = 18,
	AUTH_SERVER_PACKAGE_S16_BASIC = 19,
	AUTH_SERVER_PACKAGE_S16_FULL = 20,
};

enum eAuthServerPlan
{
	AUTH_SERVER_PLAN_NONE = 0, // SEM HWID
	AUTH_SERVER_PLAN_BASIC = 0, // COM HWID
	AUTH_SERVER_PLAN_FULL = 0, // COM HWID e Autenticação de 2 fatores
};

enum eAuthServerStatus
{
	AUTH_SERVER_STATUS_NONE = 0,
	AUTH_SERVER_STATUS_SUCCESS = 1,
	AUTH_SERVER_STATUS_BLOK = 2,
	AUTH_SERVER_STATUS_PROVISIONAL = 3,
};

class CThreadAuth
{
public:
	CThreadAuth();
	virtual ~CThreadAuth();
	void Init();
	int round(double number);
public:
	HANDLE ThreadHandles[7];
	int CountTime;
	int CountTimeMinimized;
	int CountServerDllCheck;
	int randomNumber;
};

extern CThreadAuth gThreadAuth;